@page "/{EventName}/register"
@using System.ComponentModel.DataAnnotations
@using EventEase.Services
@inject NavigationManager Navigation
@inject AttendanceService Attendance
@inject UserSessionService UserSession

<div class="registration-form-container">
    <h3>Register for @EventName</h3>

    <EditForm Model="@registrationModel" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        
        <div class="form-group">
            <label>Name:</label>
            <InputText @bind-Value="registrationModel.Name" class="form-control-modern" />
            <ValidationMessage For="@(() => registrationModel.Name)" />
        </div>

        <div class="form-group">
            <label>Email:</label>
            <InputText @bind-Value="registrationModel.Email" class="form-control-modern" />
            <ValidationMessage For="@(() => registrationModel.Email)" />
        </div>

        <div class="action-buttons">
            <button type="button" class="btn-secondary" @onclick="BackToEventList">Cancel</button>
            <button type="submit" class="btn-primary">Submit</button>
        </div>
    </EditForm>

    @if (registrationSuccess)
    {
        <p class="form-success-message">Registration successful!</p>
    }
</div>


@code {
    private RegistrationModel registrationModel = new();
    private bool registrationSuccess = false;

    [Parameter]
    public string EventName {get; set;} = "";

    public class RegistrationModel
    {
        [Required(ErrorMessage = "Name is required.")]
        public string Name { get; set; } = "";

        [Required(ErrorMessage = "Email is required.")]
        [EmailAddress(ErrorMessage = "Invalid email address.")]
        public string Email { get; set; } = "";
    }

    protected override void OnInitialized()
    {
        if (UserSession?.IsRegistered == true)
        {
            registrationModel.Name = UserSession.CurrentUsername ?? "";
            registrationModel.Email = UserSession.CurrentEmail ?? "";
        }
    }

    private void HandleValidSubmit()
    {
        try
        {
            UserSession.RegisterUser(registrationModel.Name, registrationModel.Email);
            Attendance.Register(EventName, registrationModel.Name);
            registrationSuccess = true;
            Navigation.NavigateTo("/");
        }
        catch (Exception ex)
        {
            registrationSuccess = false;
            Console.WriteLine($"Error happened during registration: {ex.Message}");
        }
    }

    private void BackToEventList()
    {
        Navigation.NavigateTo("/");
    }
}
